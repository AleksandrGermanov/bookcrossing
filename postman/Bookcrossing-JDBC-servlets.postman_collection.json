{
  "info": {
    "_postman_id": "24e94859-a36d-4ceb-afae-2b6017364182",
    "name": "Bookcrossing-JDBC-servlets",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "28177137"
  },
  "item": [
    {
      "name": "Users",
      "item": [
        {
          "name": "User1CreationSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user1\",\r\n    \"email\": \"user1@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "User2CreationSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user2\",\r\n    \"email\": \"user2@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "User3CreationSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user3\",\r\n    \"email\": \"user3@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "UserCreation_WhenExistingEmail_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 500\", function () {\r",
                  "    pm.response.to.have.status(500);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user1\",\r\n    \"email\": \"user1@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "UserCreation_WhenNameIsBlank_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"\",\r\n    \"email\": \"user1111@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "UserCreation_WhenNameIsNull_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"user1111@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "UserCreation_WhenEmailIsNull_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"user111\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "UserCreation_WhenEmailHasWrongFormat_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user1\",\r\n    \"email\": \"grandpa's_countryside\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1UpdateSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user11\",\r\n    \"email\": \"user11@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1Update_WhenNameOnly_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\":\"user111\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1Update_WhenEmailOnly_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"user111@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1Update_WhenExistingEmail_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.have.status(500);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"user2@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1Update_WhenNoUserExist_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"user2@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/4",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "4"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1Update_WhenNameIsBlank_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \" \",\r\n    \"email\": \"user2@ema.il\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1Update_WhenEmailHasWrongFormat_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"IShallNotPass\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User1RetrieveSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User4Retrieve_WhenNoUserExists_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/4",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "4"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User3RetrieveSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/3",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "3"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User3DeleteSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/3",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "3"
              ]
            }
          },
          "response": []
        },
        {
          "name": "User3Retrieve_AfterDeletion_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/3",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                "3"
              ]
            }
          },
          "response": []
        },
        {
          "name": "UsersFindAllSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/users/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "users",
                ""
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Books",
      "item": [
        {
          "name": "Book1CreationSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title1\",\r\n    \"author\": \"author1\",\r\n    \"publicationYear\": 2021,\r\n    \"isAvailable\": true\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Book2CreationSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title2\",\r\n    \"author\": \"author2\",\r\n    \"publicationYear\": 2022,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Book3CreationSucceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title3\",\r\n    \"author\": \"author3\",\r\n    \"publicationYear\": 2020,\r\n    \"isAvailable\": true\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenNoUserFound_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404)\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"author4\",\r\n    \"publicationYear\": 1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=4",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "4"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenTitleIsBlank_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \" \",\r\n    \"author\": \"author3\",\r\n    \"publicationYear\": 2022,\r\n    \"isAvailable\": true\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenTitleIsNull_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"author\": \"author3\",\r\n    \"publicationYear\": 2022,\r\n    \"isAvailable\": true\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenAuthorIsBlank_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"\",\r\n    \"publicationYear\": 1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenAuthorIsNull_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"publicationYear\": 1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenPublicationYearIsNegative_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"author4\",\r\n    \"publicationYear\": -1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenIsAvailbalseIsNull_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"author4\",\r\n    \"publicationYear\": 1999\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookCreation_WhenUserParameterIsNull_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"author4\",\r\n    \"publicationYear\": 1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Book1Update_WhenUserIsNotOwner_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title11\",\r\n    \"author\": \"author11\",\r\n    \"publicationYear\": 1111,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookUpdate_WhenAuthorIsBlank_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"\",\r\n    \"publicationYear\": 1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookUpdate_WhenPublicationYearIsNegative_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"author4\",\r\n    \"publicationYear\": -1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookUpdate_WhenUserParameterIsNull_Fails Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title4\",\r\n    \"author\": \"author4\",\r\n    \"publicationYear\": 1999,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Book1Update_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title11\",\r\n    \"author\": \"author11\",\r\n    \"publicationYear\": 1111,\r\n    \"isAvailable\": false\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BooksFindAll_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books"
              ]
            }
          },
          "response": []
        },
        {
          "name": "BooksSearch_WhenNoParams_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/search/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "search",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "BooksSearch_WhenAllParams_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/search?title-title&author=thor&published-since=2019&is-available=true&order=publication_year_desc",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "search"
              ],
              "query": [
                {
                  "key": "title-title",
                  "value": null
                },
                {
                  "key": "author",
                  "value": "thor"
                },
                {
                  "key": "published-since",
                  "value": "2019"
                },
                {
                  "key": "is-available",
                  "value": "true"
                },
                {
                  "key": "order",
                  "value": "publication_year_desc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookRetrieve_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/3",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "3"
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookRetrieve_WhenNoBookExists_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/4",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "4"
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookDeletion_WhenUserIsNotOwner_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/3?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "3"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookDeletion_Secceeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/3?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "3"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookRetrieve_AfterDeletion_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/3",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "3"
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookGiveAway_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "packages": {},
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1/give-away?user=1&user-to=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1",
                "give-away"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                },
                {
                  "key": "user-to",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookGiveAway_WhenUserIsNotOwner_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1/give-away?user=1&user-to=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1",
                "give-away"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                },
                {
                  "key": "user-to",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "BookGiveAway_WhenReversed_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1/give-away?user=2&user-to=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1",
                "give-away"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                },
                {
                  "key": "user-to",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "BookRequests",
      "item": [
        {
          "name": "Book1_SetIsAvailableIsTrueUpdate_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "packages": {},
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"isAvailable\": true\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/books/1?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "books",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Request1Creation_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/requests?user=2&book=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "requests"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                },
                {
                  "key": "book",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "RequestCreation_WhenBookIsNotAvalable_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/requests?user=2&book=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "requests"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                },
                {
                  "key": "book",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "RequestCreation_WhenUserIsBookOwner_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/requests?user=1&book=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "requests"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                },
                {
                  "key": "book",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "RequestDeletion_WhenUserIsNotRequester_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 403\", function () {\r",
                  "    pm.response.to.have.status(403);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/requests/1?user=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "requests",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "RequestDeletion_Succeeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 2xx\", function () {\r",
                  "    pm.response.to.be.success;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/requests/1?user=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "requests",
                "1"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "RequestRetrieve_AfterDeletion_Fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:{{port}}/requests/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "{{port}}",
              "path": [
                "requests",
                "1"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "port",
      "value": "8088"
    }
  ]
}